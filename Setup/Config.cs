using System;
using System.Collections.Generic;
using System.IO;
using Newtonsoft.Json;

namespace Causym
{
    public class Config
    {
        private static string savePath = Path.Combine(AppContext.BaseDirectory, "Config.json");

        public enum Defaults
        {
            Token,
            Prefix
        }

        public Dictionary<string, string> Entries { get; set; } = new Dictionary<string, string>();

        public static Config LoadFromFile(string path)
        {
            Config config;
            if (path == null)
            {
                path = savePath;
            }

            if (File.Exists(path))
            {
                var file = File.ReadAllText(path);
                config = JsonConvert.DeserializeObject<Config>(file);
                savePath = path;
            }
            else
            {
                config = GenerateAndSaveDefaultConfig(path);
            }

            return config;
        }

        /// <summary>
        /// Saves the config to the last save path (generated by the LoadFromFile method).
        /// </summary>
        public void Save()
        {
            File.WriteAllText(savePath, JsonConvert.SerializeObject(this));
        }

        private static Config GenerateAndSaveDefaultConfig(string path)
        {
            savePath = path;
            var config = new Config();
            File.WriteAllText(path, JsonConvert.SerializeObject(config));
            return config;
        }
    }
}
